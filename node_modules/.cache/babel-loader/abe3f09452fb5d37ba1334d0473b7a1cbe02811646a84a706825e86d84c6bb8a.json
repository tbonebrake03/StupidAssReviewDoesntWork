{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: \"ReviewList\",\n  book: {},\n  data: () => ({\n    reviews: [],\n    validUserName: \"Guest\",\n    reviewSize: 0,\n    showMsg: '',\n    isMobile: false,\n    authenticated: false,\n    headers: [{\n      text: 'Title',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Author',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Genre',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Summary',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Publisher',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Published Date',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Page Total',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Series Number',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Delete',\n      sortable: false,\n      align: 'left'\n    }]\n  }),\n  mounted() {\n    this.authenticated = localStorage.getItem(\"isAuthenticated\");\n    this.getReviews();\n    this.showMessages();\n  },\n  methods: {\n    getBookDetails() {\n      apiService.getBook(this.$route.params.pk).then(response => {\n        this.book = response.data;\n        if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n          this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n      apiService.getAuthor(this.$route.params.pk).then(response => {\n        this.book.author = response.data.name;\n        console.log(this.book.author);\n        this.photo = response.data.photo;\n        if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n          this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n    },\n    onResize() {\n      if (window.innerWidth > 600) this.isMobile = false;else this.isMobile = true;\n    },\n    showMessages() {\n      if (this.$route.params.msg) {\n        this.showMsg = this.$route.params.msg;\n      }\n    },\n    getReviews() {\n      apiService.getReviewList().then(response => {\n        this.reviews = response.data.data;\n        this.ReviewSize = this.reviews.length;\n        if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n          this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n    },\n    addNewReview() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        router.push('/review-create');\n      } else {\n        router.push(\"/auth\");\n      }\n    },\n    updateReview(review) {\n      router.push('/review-create/' + review.pk);\n    },\n    deleteReview(review) {\n      if (confirm(\"Do you really want to delete?\")) {\n        apiService.deleteReview(review.pk).then(response => {\n          if (response.status === 204) {\n            router.push('/review-list/deleted/');\n            this.getReviews();\n          }\n        }).catch(error => {\n          if (error.response.status === 401) {\n            localStorage.clear();\n            router.push(\"/auth\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","book","data","reviews","validUserName","reviewSize","showMsg","isMobile","authenticated","headers","text","sortable","align","mounted","localStorage","getItem","getReviews","showMessages","methods","getBookDetails","getBook","$route","params","pk","then","response","JSON","parse","catch","error","status","clear","push","getAuthor","author","console","log","photo","onResize","window","innerWidth","msg","getReviewList","ReviewSize","length","addNewReview","updateReview","review","deleteReview","confirm"],"sources":["/Users/tbonebrake/Documents/GitHub/Front-end-BookBuddy-Group1-ISQA4900/src/components/ReviewList.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 align-items-center justify-content-center\">\n                <blockquote>\n                    Welcome {{ validUserName }}!\n                    <footer>\n                        <small>\n                            <em>&mdash;Your Book Buddy & You!</em>\n                        </small>\n                    </footer>\n                </blockquote>\n            </div>\n            <div class=\"col-12 col-md-10 col-lg-10 col-12 align-items-center justify-content-center\">\n                <div class=\"alert alert-success\" v-if=\"showMsg === 'new'\" :value=\"true\">\n                    New Review has been added.\n                </div>\n                <div class=\"alert alert-success\" v-if=\"showMsg === 'update'\" :value=\"true\">\n                    Review has been updated.\n                </div>\n                <div class=\"alert alert-success\" v-if=\"showMsg === 'deleted'\" :value=\"true\">\n                    Selected Review has been deleted.\n                </div>\n            </div>\n        </div>\n        <!--Mobile device view-->\n        <div class=\"d-md-none\" id=\"collapsable-card\" style=\"width: 80%\">\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewReview\">\n                <font-awesome-icon icon=\"plus\" />\n            </button>\n            <div class=\"card\" v-for=\"review in reviews\" v-bind:key=\"review\">\n                <div class=\"card-header\" :id=\"'heading' + review.title\">\n                    <button class=\"btn btn-link collapsed\" data-bs-toggle=\"collapse\"\n                        :data-bs-target=\"'#collapse' + review.pk\" aria-expanded=\"true\"\n                        :aria-controls=\"'collapse' + review.pk\">\n                        <h6 style=\"color: #0275d8; float: left\">{{ review.title }}</h6>\n                    </button>\n                </div>\n\n                <div :id=\"'collapse' + review.pk\" class=\"collapse\" :aria-labelledby=\"'heading' + review.pk\"\n                    data-bs-parent=\"#collapsable-card\">\n                    <div class=\"card-body\">\n                        <p><b>Book:</b> {{ review.book }}</p>\n                        <p><b>Reader:</b> {{ review.reader }}</p>\n                        <p><b>Title:</b> {{ review.title }}</p>\n                        <p><b>Review:</b> {{ review.text }}</p>\n                        <p><b>Rating:</b> {{ review.rating }}</p>\n                        <!-- Again, if we want update/create dates, they would be input back here in listing -->\n                        <div class=\"btn-group\">\n                            <button @click=\"updateReview(review)\" style=\"background-color: transparent; padding: 5;\">\n                                <font-awesome-icon icon=\"pencil\" /></button>\n                            <button @click=\"deleteReview(review)\" style=\"background-color: transparent; padding: 5;\">\n                                <font-awesome-icon icon=\"trash\" /></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!--non-Mobile device view-->\n\n        <div class=\"col col-12 col-md-10 d-none d-xl-block d-lg-block d-md-block\">\n            <table class=\"table table-hover\" style=\"overflow-y: auto\" :headers=\"headers\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Book</th>\n                        <th scope=\"col\">Reader</th>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Review</th>\n                        <th scope=\"col\">Rating</th>\n                        <th scope=\"col\">Update</th>\n                        <th scope=\"col\">Delete</th> <!-- Potentially remove? Find the purpose of this-->\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"review in reviews\" v-bind:key=\"review\">\n\n                        <td>{{ review.book }}</td>\n                        <td>{{ review.reader }}</td>\n                        <td>{{ review.title }}</td>\n                        <td>{{ review.text }}</td>\n                        <td>{{ review.rating }}</td>\n                        <td v-if=\"this.authenticated === 'true'\" @click=\"updateReview(review)\"><button\n                                style=\"background-color: transparent; padding: 0;\">\n                                <font-awesome-icon icon=\"pencil\" /></button>\n                        </td>\n                        <td v-if=\"this.authenticated === 'true'\" @click=\"deleteReview(review)\"><button\n                                style=\"background-color: transparent; padding: 0;\">\n                                <font-awesome-icon icon=\"trash\" /></button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <!-- Only allow add of reviews when authenticated user -->\n            <div v-if=\"this.authenticated === 'true'\">\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewReview\">Add New Review</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\n\nexport default {\n    name: \"ReviewList\",\n    book: {},\n    data: () => ({\n        reviews: [],\n        validUserName: \"Guest\",\n        reviewSize: 0,\n        showMsg: '',\n        isMobile: false,\n        authenticated: false,\n        headers: [\n            { text: 'Title', sortable: false, align: 'left', },\n            { text: 'Author', sortable: false, align: 'left', },\n            { text: 'Genre', sortable: false, align: 'left', },\n            { text: 'Summary', sortable: false, align: 'left', },\n            { text: 'Publisher', sortable: false, align: 'left', },\n            { text: 'Published Date', sortable: false, align: 'left', },\n            { text: 'Page Total', sortable: false, align: 'left', },\n            { text: 'Series Number', sortable: false, align: 'left', },\n            { text: 'Delete', sortable: false, align: 'left', }\n        ],\n    }),\n    mounted() {\n        this.authenticated = localStorage.getItem(\"isAuthenticated\")\n        this.getReviews();\n        this.showMessages();\n    },\n    methods: {\n        getBookDetails() {\n            apiService.getBook(this.$route.params.pk).then(response => {\n                this.book = response.data;\n                if (localStorage.getItem(\"isAuthenticated\")\n                    && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                    this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n                }\n            }).catch(error => {\n                if (error.response.status === 401) {\n                    localStorage.clear();\n                    router.push(\"/auth\");\n                }\n            });\n            apiService.getAuthor(this.$route.params.pk).then(response => {\n                this.book.author = response.data.name;\n                console.log(this.book.author);\n                this.photo = response.data.photo;\n                if (localStorage.getItem(\"isAuthenticated\")\n                    && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                    this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n                }\n            }).catch(error => {\n                if (error.response.status === 401) {\n                    localStorage.clear();\n                    router.push(\"/auth\");\n                }\n            })\n        },\n        onResize() {\n            if (window.innerWidth > 600)\n                this.isMobile = false;\n            else\n                this.isMobile = true;\n        },\n        showMessages() {\n            if (this.$route.params.msg) {\n                this.showMsg = this.$route.params.msg;\n            }\n        },\n        getReviews() {\n            apiService.getReviewList().then(response => {\n                this.reviews = response.data.data;\n                this.ReviewSize = this.reviews.length;\n                if (localStorage.getItem(\"isAuthenticated\")\n                    && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                    this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n                }\n            }).catch(error => {\n                if (error.response.status === 401) {\n                    localStorage.clear();\n                    router.push(\"/auth\");\n                }\n            });\n        },\n        addNewReview() {\n            if (localStorage.getItem(\"isAuthenticated\")\n                && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                router.push('/review-create');\n            } else {\n                router.push(\"/auth\");\n            }\n        },\n        updateReview(review) {\n            router.push('/review-create/' + review.pk);\n        },\n        deleteReview(review) {\n            if (confirm(\"Do you really want to delete?\")) {\n                apiService.deleteReview(review.pk).then(response => {\n                    if (response.status === 204) {\n                        router.push('/review-list/deleted/')\n                        this.getReviews()\n                    }\n                }).catch(error => {\n                    if (error.response.status === 401) {\n                        localStorage.clear();\n                        router.push(\"/auth\");\n                    }\n                });\n            }\n        }\n    }\n};\n</script>\n<style>\nbutton {\n    padding: 1rem;\n    border: 0;\n    cursor: pointer;\n}\n</style>"],"mappings":";AAoGA,OAAOA,MAAK,MAAO,WAAW;AAC9B,SAASC,UAAS,QAAS,oBAAoB;AAC/C,MAAMC,UAAS,GAAI,IAAID,UAAU,CAAC,CAAC;AAEnC,eAAe;EACXE,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,CAAC,CAAC;EACRC,IAAI,EAAEA,CAAA,MAAO;IACTC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE,OAAO;IACtBC,UAAU,EAAE,CAAC;IACbC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,KAAK;IACfC,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,CACL;MAAEC,IAAI,EAAE,OAAO;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAClD;MAAEF,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EACnD;MAAEF,IAAI,EAAE,OAAO;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAClD;MAAEF,IAAI,EAAE,SAAS;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EACpD;MAAEF,IAAI,EAAE,WAAW;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EACtD;MAAEF,IAAI,EAAE,gBAAgB;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAC3D;MAAEF,IAAI,EAAE,YAAY;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EACvD;MAAEF,IAAI,EAAE,eAAe;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAC1D;MAAEF,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE;IAAQ;EAE1D,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACL,aAAY,GAAIM,YAAY,CAACC,OAAO,CAAC,iBAAiB;IAC3D,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,YAAY,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAAA,EAAG;MACbpB,UAAU,CAACqB,OAAO,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QACvD,IAAI,CAACxB,IAAG,GAAIwB,QAAQ,CAACvB,IAAI;QACzB,IAAIY,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACnCW,IAAI,CAACC,KAAK,CAACb,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;UACjE,IAAI,CAACX,aAAY,GAAIsB,IAAI,CAACC,KAAK,CAACb,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrE;MACJ,CAAC,CAAC,CAACa,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC/BhB,YAAY,CAACiB,KAAK,CAAC,CAAC;UACpBlC,MAAM,CAACmC,IAAI,CAAC,OAAO,CAAC;QACxB;MACJ,CAAC,CAAC;MACFjC,UAAU,CAACkC,SAAS,CAAC,IAAI,CAACZ,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;QACzD,IAAI,CAACxB,IAAI,CAACiC,MAAK,GAAIT,QAAQ,CAACvB,IAAI,CAACF,IAAI;QACrCmC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnC,IAAI,CAACiC,MAAM,CAAC;QAC7B,IAAI,CAACG,KAAI,GAAIZ,QAAQ,CAACvB,IAAI,CAACmC,KAAK;QAChC,IAAIvB,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACnCW,IAAI,CAACC,KAAK,CAACb,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;UACjE,IAAI,CAACX,aAAY,GAAIsB,IAAI,CAACC,KAAK,CAACb,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrE;MACJ,CAAC,CAAC,CAACa,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC/BhB,YAAY,CAACiB,KAAK,CAAC,CAAC;UACpBlC,MAAM,CAACmC,IAAI,CAAC,OAAO,CAAC;QACxB;MACJ,CAAC;IACL,CAAC;IACDM,QAAQA,CAAA,EAAG;MACP,IAAIC,MAAM,CAACC,UAAS,GAAI,GAAG,EACvB,IAAI,CAACjC,QAAO,GAAI,KAAK,MAErB,IAAI,CAACA,QAAO,GAAI,IAAI;IAC5B,CAAC;IACDU,YAAYA,CAAA,EAAG;MACX,IAAI,IAAI,CAACI,MAAM,CAACC,MAAM,CAACmB,GAAG,EAAE;QACxB,IAAI,CAACnC,OAAM,GAAI,IAAI,CAACe,MAAM,CAACC,MAAM,CAACmB,GAAG;MACzC;IACJ,CAAC;IACDzB,UAAUA,CAAA,EAAG;MACTjB,UAAU,CAAC2C,aAAa,CAAC,CAAC,CAAClB,IAAI,CAACC,QAAO,IAAK;QACxC,IAAI,CAACtB,OAAM,GAAIsB,QAAQ,CAACvB,IAAI,CAACA,IAAI;QACjC,IAAI,CAACyC,UAAS,GAAI,IAAI,CAACxC,OAAO,CAACyC,MAAM;QACrC,IAAI9B,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACnCW,IAAI,CAACC,KAAK,CAACb,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;UACjE,IAAI,CAACX,aAAY,GAAIsB,IAAI,CAACC,KAAK,CAACb,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrE;MACJ,CAAC,CAAC,CAACa,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;UAC/BhB,YAAY,CAACiB,KAAK,CAAC,CAAC;UACpBlC,MAAM,CAACmC,IAAI,CAAC,OAAO,CAAC;QACxB;MACJ,CAAC,CAAC;IACN,CAAC;IACDa,YAAYA,CAAA,EAAG;MACX,IAAI/B,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACnCW,IAAI,CAACC,KAAK,CAACb,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;QACjElB,MAAM,CAACmC,IAAI,CAAC,gBAAgB,CAAC;MACjC,OAAO;QACHnC,MAAM,CAACmC,IAAI,CAAC,OAAO,CAAC;MACxB;IACJ,CAAC;IACDc,YAAYA,CAACC,MAAM,EAAE;MACjBlD,MAAM,CAACmC,IAAI,CAAC,iBAAgB,GAAIe,MAAM,CAACxB,EAAE,CAAC;IAC9C,CAAC;IACDyB,YAAYA,CAACD,MAAM,EAAE;MACjB,IAAIE,OAAO,CAAC,+BAA+B,CAAC,EAAE;QAC1ClD,UAAU,CAACiD,YAAY,CAACD,MAAM,CAACxB,EAAE,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK;UAChD,IAAIA,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;YACzBjC,MAAM,CAACmC,IAAI,CAAC,uBAAuB;YACnC,IAAI,CAAChB,UAAU,CAAC;UACpB;QACJ,CAAC,CAAC,CAACY,KAAK,CAACC,KAAI,IAAK;UACd,IAAIA,KAAK,CAACJ,QAAQ,CAACK,MAAK,KAAM,GAAG,EAAE;YAC/BhB,YAAY,CAACiB,KAAK,CAAC,CAAC;YACpBlC,MAAM,CAACmC,IAAI,CAAC,OAAO,CAAC;UACxB;QACJ,CAAC,CAAC;MACN;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}