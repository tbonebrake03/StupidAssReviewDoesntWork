{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: \"BookBuddyList\",\n  data: () => ({\n    customers: [],\n    validUserName: \"Guest\",\n    customerSize: 0,\n    showMsg: '',\n    isMobile: false,\n    authenticated: false,\n    is_superuser: false,\n    headers: [{\n      text: 'Book',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Favorited',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Read',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Read Later',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Currently Reading',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Current Page',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Last Read',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Update',\n      sortable: false,\n      align: 'left'\n    }, {\n      text: 'Delete',\n      sortable: false,\n      align: 'left'\n    }]\n  }),\n  mounted() {\n    this.authenticated = localStorage.getItem(\"isAuthenticated\");\n    this.is_superuser = localStorage.getItem(\"is_superuser\");\n    this.validUserName = localStorage.getItem(\"username\");\n    this.userID = Number(localStorage.getItem(\"userID\"));\n    this.getMyCustomers();\n    this.showMessages();\n  },\n  methods: {\n    onResize() {\n      if (window.innerWidth > 600) this.isMobile = false;else this.isMobile = true;\n    },\n    showMessages() {\n      if (this.$route.params.msg) {\n        this.showMsg = this.$route.params.msg;\n      }\n    },\n    getBookBuddy() {\n      apiService.getBookBuddyList().then(response => {\n        this.bookbuddys = response.data.data;\n        this.bookbuddySize = this.bookbuddys.length;\n        if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n          this.validUserName = localStorage.getItem(\"username\");\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          localStorage.clear();\n          router.push(\"/auth\");\n        }\n      });\n    },\n    addNewBookBuddy() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        router.push('/bookbuddy-create');\n      } else {\n        router.push(\"/auth\");\n      }\n    },\n    updateBookBuddy(bookbuddy) {\n      router.push('/bookbuddy-create/' + bookbuddy.pk);\n    },\n    deleteBookBuddy(bookbuddy) {\n      if (confirm(\"Do you really want to delete?\")) {\n        apiService.deleteBookBuddy(bookbuddy.pk).then(response => {\n          if (response.status === 204) {\n            router.push('/bookbuddy-list/deleted/');\n            this.getBookBuddy();\n          }\n        }).catch(error => {\n          if (error.response.status === 401) {\n            localStorage.clear();\n            router.push(\"/auth\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","data","customers","validUserName","customerSize","showMsg","isMobile","authenticated","is_superuser","headers","text","sortable","align","mounted","localStorage","getItem","userID","Number","getMyCustomers","showMessages","methods","onResize","window","innerWidth","$route","params","msg","getBookBuddy","getBookBuddyList","then","response","bookbuddys","bookbuddySize","length","JSON","parse","catch","error","status","clear","push","addNewBookBuddy","updateBookBuddy","bookbuddy","pk","deleteBookBuddy","confirm"],"sources":["/Users/tbonebrake/Documents/GitHub/Front-end-BookBuddy-Group1-ISQA4900/src/components/BookBuddyList.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 align-items-center justify-content-center\">\n                <blockquote>\n                    Welcome {{ validUserName }}!\n                    <footer>\n                        <!--\n                        <<small>\n                            <em>&mdash;Financial Services, your Midwest Financial Services Partner.</em>\n                        </small>\n                        -->\n                    </footer>\n                </blockquote>\n            </div>\n            <div class=\"col-12 col-md-10 col-lg-10 col-12 align-items-center justify-content-center\">\n                <div class=\"alert alert-success\"\n                     v-if=\"showMsg === 'new'\"\n                     :value=\"true\">\n                    New BookBuddy created.\n                </div>\n                <div class=\"alert alert-success\"\n                     v-if=\"showMsg === 'update'\"\n                     :value=\"true\">\n                    BookBuddy updated.\n                </div>\n                <div class=\"alert alert-success\"\n                     v-if=\"showMsg === 'deleted'\"\n                     :value=\"true\">\n                    BookBuddy has been deleted.\n                </div>\n            </div>\n        </div>\n        <!--Mobile device view-->\n        <div class=\"d-md-none\" id=\"collapsable-card\" style=\"width: 80%\">\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewBookBuddy\">\n                <font-awesome-icon icon=\"plus\"/>\n            </button>\n            <div class=\"card\" v-for=\"bookbuddy in bookbuddys\" v-bind:key=\"bookbuddy\">\n                <div class=\"card-header\" :id=\"'heading' + bookbuddy.user\">\n                    <button class=\"btn btn-link collapsed\" data-bs-toggle=\"collapse\"\n                            :data-bs-target=\"'#collapse' + bookbuddy.pk\" aria-expanded=\"true\"\n                            :aria-controls=\"'collapse' + bookbuddy.pk\">\n                        <h6 style=\"color: #0275d8; float: left\">{{ bookbuddy.book }}</h6> <!-- Need to import book (potentially user model) at bottom for book title-->\n                    </button>\n                </div>\n\n                <div :id=\"'collapse' + customer.pk\" class=\"collapse\" :aria-labelledby=\"'heading' + bookbuddy.pk\"\n                     data-bs-parent=\"#collapsable-card\">\n                    <div class=\"card-body\">\n                        <p><b>Book:</b> {{ bookbuddy.book.title }}</p>\n                        <p><b>Favorited:</b> {{ bookbuddy.fav_status }}</p>\n                        <p><b>Read:</b>{{ bookbuddy.read_status }}</p>\n                        <p><b>Read Later:</b> {{ bookbuddy.read_later_status }}</p>\n                        <p><b>Currently Reading:</b> {{ bookbuddy.currently_reading }}</p>\n                        <p><b>Current Page:</b> {{ bookbuddy.current_page  }}</p>\n                        <p><b>Last Read:</b> {{ bookbuddy.last_read }}</p>\n                        <div v-if=\"(this.userID === bookbuddy.user || this.is_superuser === 'true')\" class=\"btn-group\">\n                            <button @click=\"updateBookBuddy(bookbuddy)\"\n                                    style=\"background-color: transparent; padding: 5;\">\n                                <font-awesome-icon icon=\"pencil\"/>\n                            </button>\n                            <button @click=\"deleteBookBuddy(bookbuddy)\"\n                                    style=\"background-color: transparent; padding: 5;\">\n                                <font-awesome-icon icon=\"trash\"/>\n                            </button>\n                        </div>\n                        <div v-else class=\"btn-group\">\n                            <button style=\"background-color: transparent; padding: 0;\" disabled>\n                                <font-awesome-icon icon=\"pencil\"/>\n                            </button>\n                            <button style=\"background-color: transparent; padding: 0;\" disabled>\n                                <font-awesome-icon icon=\"trash\"/>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!--non-Mobile device view-->\n        <div class=\"col col-12 col-md-10 d-none d-xl-block d-lg-block d-md-block\">\n            <table class=\"table table-hover\" style=\"overflow-y: auto\"\n                   :headers=\"headers\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Book</th>\n                    <th scope=\"col\">Favorited</th>\n                    <th scope=\"col\">Read</th>\n                    <th scope=\"col\">Read Later</th>\n                    <th scope=\"col\">Currently Reading</th>\n                    <th scope=\"col\">Current Page</th>\n                    <th scope=\"col\">Last Read</th>\n                    <th scope=\"col\">Update</th>\n                    <th scope=\"col\">Delete</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-for=\"bookbuddy in bookbuddys\" v-bind:key=\"bookbuddy\">\n                    <th scope=\"row\">{{ bookbuddy.user }}</th>\n                    <td>{{ bookbuddy.book.title }}</td>\n                    <td>{{ bookbuddy.fav_status }}</td>\n                    <td>{{ bookbuddy.read_status }}</td>\n                    <td>{{ bookbuddy.read_later_status }}</td>\n                    <td>{{ bookbuddy.currently_reading }}</td>\n                    <td>{{ bookbuddy.current_page }}</td>\n                    <td>{{ bookbuddy.last_read }}</td>\n                    <td v-if=\"(this.userID === bookbuddy.user || this.is_superuser === 'true')\"\n                        @click=\"updateBookBuddy(bookbuddy)\">\n                        <button style=\"background-color: transparent; padding: 0;\">\n                            <font-awesome-icon icon=\"pencil\"/>\n                        </button>\n                    </td>\n                    <td v-else>\n                        <button style=\"background-color: transparent; padding: 0;\" disabled>\n                            <font-awesome-icon icon=\"pencil\"/>\n                        </button>\n                    </td>\n                    <td v-if=\"(this.userID === bookbuddy.user || this.is_superuser === 'true')\"\n                        @click=\"deleteBookBuddy(bookbuddy)\">\n                        <button style=\"background-color: transparent; padding: 5;\">\n                            <font-awesome-icon icon=\"trash\"/>\n                        </button>\n                    </td>\n                    <td v-else>\n                        <button style=\"background-color: transparent; padding: 5;\" disabled>\n                            <font-awesome-icon icon=\"trash\"/>\n                        </button>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n            <!-- Only allow add of customer when authenticated user -->\n            <div v-if=\"this.authenticated === 'true'\">\n                <button type=\"button\" class=\"btn btn-primary\" @click=\"addNewBookBuddy\">Create BookBuddy</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    import router from '../router';\n    import {APIService} from '../http/APIService';\n\n    const apiService = new APIService();\n\n    export default {\n        name: \"BookBuddyList\",\n        data: () => ({\n            customers: [],\n            validUserName: \"Guest\",\n            customerSize: 0,\n            showMsg: '',\n            isMobile: false,\n            authenticated: false,\n            is_superuser: false,\n            headers: [\n                {text: 'Book', sortable: false, align: 'left',},\n                {text: 'Favorited', sortable: false, align: 'left',},\n                {text: 'Read', sortable: false, align: 'left',},\n                {text: 'Read Later', sortable: false, align: 'left',},\n                {text: 'Currently Reading', sortable: false, align: 'left',},\n                {text: 'Current Page', sortable: false, align: 'left',},\n                {text: 'Last Read', sortable: false, align: 'left',},\n                {text: 'Update', sortable: false, align: 'left',},\n                {text: 'Delete', sortable: false, align: 'left',}\n            ],\n        }),\n        mounted() {\n            this.authenticated = localStorage.getItem(\"isAuthenticated\")\n            this.is_superuser = localStorage.getItem(\"is_superuser\");\n            this.validUserName = localStorage.getItem(\"username\");\n            this.userID = Number(localStorage.getItem(\"userID\"));\n            this.getMyCustomers();\n            this.showMessages();\n        },\n        methods: {\n            onResize() {\n                if (window.innerWidth > 600)\n                    this.isMobile = false;\n                else\n                    this.isMobile = true;\n            },\n            showMessages() {\n                if (this.$route.params.msg) {\n                    this.showMsg = this.$route.params.msg;\n                }\n            },\n            getBookBuddy() {\n                apiService.getBookBuddyList().then(response => {\n                    this.bookbuddys = response.data.data;\n                    this.bookbuddySize = this.bookbuddys.length;\n                    if (localStorage.getItem(\"isAuthenticated\")\n                        && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                        this.validUserName = localStorage.getItem(\"username\");\n                    }\n                }).catch(error => {\n                    if (error.response.status === 401) {\n                        localStorage.clear();\n                        router.push(\"/auth\");\n                    }\n                });\n            },\n            addNewBookBuddy() {\n                if (localStorage.getItem(\"isAuthenticated\")\n                    && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n                    router.push('/bookbuddy-create');\n                } else {\n                    router.push(\"/auth\");\n                }\n            },\n            updateBookBuddy(bookbuddy) {\n                router.push('/bookbuddy-create/' + bookbuddy.pk);\n            },\n            deleteBookBuddy(bookbuddy) {\n                if (confirm(\"Do you really want to delete?\")) {\n                    apiService.deleteBookBuddy(bookbuddy.pk).then(response => {\n                        if (response.status === 204) {\n                            router.push('/bookbuddy-list/deleted/')\n                            this.getBookBuddy()\n                        }\n                    }).catch(error => {\n                        if (error.response.status === 401) {\n                            localStorage.clear();\n                            router.push(\"/auth\");\n                        }\n                    });\n                }\n            }\n        }\n    };\n</script>\n<style>\n    button {\n        padding: 1rem;\n        border: 0;\n        cursor: pointer;\n    }\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}