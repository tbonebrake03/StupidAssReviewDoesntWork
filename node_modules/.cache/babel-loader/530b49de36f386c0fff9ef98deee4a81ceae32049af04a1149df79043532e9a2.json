{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'ReviewCreate',\n  components: {},\n  //prevent user from accessing this page if not authorized\n  beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === false) {\n      router.push(\"/auth\");\n    }\n  },\n  data() {\n    return {\n      showError: false,\n      review: [],\n      book: [],\n      pageTitle: \"Write New Review\",\n      isUpdate: false,\n      showMsg: '',\n      authenticated: false\n    };\n  },\n  methods: {\n    createReview() {\n      apiService.addNewReview(this.review).then(response => {\n        if (response.status === 201) {\n          this.review = response.data;\n          this.showMsg = \"\";\n          router.push('/review-list/new');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }); /* .catch(error => {\n          if (error.response.status === 401) { // \"not authorized\"\n            router.push(\"/auth\");\n          }else if (error.response.status === 400) { //\"bad request\"\n            this.showMsg = \"requestError\";\n          }else{\n            this.showMsg = \"error\";\n          }\n          }); */\n    },\n    cancelOperation() {\n      router.push(\"/review-list\");\n    },\n    fetchAuthor() {\n      if (this.authorId) {\n        apiService.getAuthor(this.authorId).then(response => {\n          this.author = response.data; // Make sure data is assigned correctly\n          console.log(\"Author data loaded:\", this.author);\n        }).catch(error => {\n          console.error('Error fetching author data:', error);\n          this.showMsg = \"Failed to load author\";\n        });\n      } else {\n        console.error('Author ID is undefined');\n        this.showMsg = 'Author ID is undefined'; // Provide feedback to the user\n      }\n    },\n    updateReview() {\n      apiService.updateReview(this.review).then(response => {\n        if (response.status === 200) {\n          this.book = response.data;\n          router.push('/review-list/update');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n  },\n  mounted() {\n    this.fetchAuthor(); // Fetch authors when component mounts\n    if (this.$route.params.pk) {\n      this.pageTitle = \"Edit Review\";\n      this.isUpdate = true;\n      apiService.getReview(this.$route.params.pk).then(response => {\n        this.review = response.data;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else {\n          this.showMsg = \"error\";\n          router.push(\"/auth\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","router","APIService","apiService","name","components","beforeCreate","localStorage","getItem","JSON","parse","authenticated","push","data","showError","review","book","pageTitle","isUpdate","showMsg","methods","createReview","addNewReview","then","response","status","cancelOperation","fetchAuthor","authorId","getAuthor","author","console","log","catch","error","updateReview","mounted","$route","params","pk","getReview"],"sources":["/Users/tbonebrake/Documents/GitHub/Front-end-BookBuddy-Group1-ISQA4900/src/components/ReviewCreate.vue"],"sourcesContent":["import { APIService } from '../http/APIService';\n\nconst apiService = new APIService();\n\n<template>\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\" col align-items-center\">\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6\">\n              <div class=\"alert alert-danger shadow\" role=\"alert\"\n              v-if=\"showMsg === 'error'\">\n                Please verify Review \n              </div>\n            </div>\n          </div>\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6 align-items-center\">\n              <div class=\"card\">\n                <div class=\"card-header\">{{pageTitle}}</div>\n                <div class=\"card-body\">\n                  <form ref=\"form\">\n                    <div class=\"container-fluid\">\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Book</label>\n                        <div class=\"col col-8\">\n                          <select v-model=\"review.book\" class=\"form-select\">\n                            <option class =\"form-select form-select-sm \" v-for=\"book in books\" :value=\"book.pk\" :key=\"book.pk\"> {{ book.title }} </option>\n                          </select>\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Reader</label>\n                        <div class=\"col col-8\">\n                          <select v-model=\"review.reader\" class=\"form-select\">\n                            <option class =\"form-select form-select-sm \" v-for=\"reader in readers\" :value=\"reader.user\" :key=\"reader.user\"> {{ reader.name }} </option>\n                          </select>\n                        </div>\n                      </div>      \n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Title</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"review.title\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Review</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"review.text\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Rating</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"review.rating\" type=\"number\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <!-- <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Author ID</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"author.auth_id\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div> -->\n\n                      <div class=\"row justify-content-around\">\n                        <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"createReview\">Save</div>\n                        <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"updateReview\">Update</div>\n                        <div type=\"button\" class=\"btn btn-secondary col-4\" @click=\"cancelOperation\">Cancel</div>   \n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n    import axios from 'axios';\n    import router from '../router';\n    import {APIService} from '../http/APIService';\n    const apiService = new APIService();\n  \n    export default {\n      name: 'ReviewCreate',\n      components: {},\n          //prevent user from accessing this page if not authorized\n    beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") &&\n        JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true ){\n          this.authenticated = true\n        }\n        else {\n          this.authenticated = false\n        }\n        if(this.authenticated===false){\n            router.push(\"/auth\");\n          }\n   },\n      data() {\n        return {\n          showError: false,\n          review: [],\n          book: [],\n          pageTitle: \"Write New Review\",\n          isUpdate: false,\n          showMsg: '',\n          authenticated: false\n        };\n      },\n      methods: {\n        createReview() {\n          apiService.addNewReview(this.review).then(response => {\n            if (response.status === 201) {\n              this.review = response.data;\n               this.showMsg = \"\";\n              router.push('/review-list/new');\n            }\n            else{\n                this.showMsg = \"error\";\n            }\n          })/* .catch(error => {\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) { //\"bad request\"\n              this.showMsg = \"requestError\";\n            }else{\n              this.showMsg = \"error\";\n            }\n          }); */\n        },\n        cancelOperation(){\n           router.push(\"/review-list\");\n        },\n        fetchAuthor() {\n            if (this.authorId) {\n              apiService.getAuthor(this.authorId)\n                .then(response => {\n                  this.author = response.data; // Make sure data is assigned correctly\n                  console.log(\"Author data loaded:\", this.author);\n                })\n                .catch(error => {\n                  console.error('Error fetching author data:', error);\n                  this.showMsg = \"Failed to load author\";\n                });\n            } else {\n              console.error('Author ID is undefined');\n              this.showMsg = 'Author ID is undefined'; // Provide feedback to the user\n            }\n          },\n        updateReview() {\n          apiService.updateReview(this.review).then(response => {\n            if (response.status === 200) {\n              this.book = response.data;\n              router.push('/review-list/update');\n            }else{\n                this.showMsg = \"error\";\n            }\n          }).catch(error => {\n            if (error.response.status === 401) {\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) {\n              this.showMsg = \"error\";\n            }\n          });\n        },\n      },\n      mounted() {\n        this.fetchAuthor();  // Fetch authors when component mounts\n        if (this.$route.params.pk) {\n          this.pageTitle = \"Edit Review\";\n          this.isUpdate = true;\n          apiService.getReview(this.$route.params.pk).then(response => {\n            this.review = response.data;\n          }).catch(error => {\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }\n            else{\n              this.showMsg = \"error\";\n              router.push(\"/auth\");\n            }\n          });\n        }\n      },\n    }\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}