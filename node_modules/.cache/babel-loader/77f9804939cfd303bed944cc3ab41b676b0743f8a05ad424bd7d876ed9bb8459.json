{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'AuthorCreate',\n  authorId: null,\n  components: {},\n  //prevent user from accessing this page if not authorized\n  beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === false) {\n      router.push(\"/auth\");\n    }\n  },\n  data() {\n    return {\n      showError: false,\n      author: {},\n      pageTitle: \"Add New Author\",\n      isUpdate: false,\n      showMsg: '',\n      authenticated: false\n    };\n  },\n  methods: {\n    createAuthor() {\n      apiService.addNewAuthor(this.author).then(response => {\n        if (response.status === 201) {\n          this.author = response.data;\n          this.showMsg = \"\";\n          router.push('/author-list/new');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }); /* .catch(error => {\n          if (error.response.status === 401) { // \"not authorized\"\n            router.push(\"/auth\");\n          }else if (error.response.status === 400) { //\"bad request\"\n            this.showMsg = \"requestError\";\n          }else{\n            this.showMsg = \"error\";\n          }\n          }); */\n    },\n    cancelOperation() {\n      router.push(\"/author-list\");\n    },\n    fetchAuthor() {\n      if (this.authorId) {\n        apiService.getAuthor(this.authorId).then(response => {\n          this.author = response.data; // Make sure data is assigned correctly\n          console.log(\"Author data loaded:\", this.author);\n        }).catch(error => {\n          console.error('Error fetching author data:', error);\n          this.showMsg = \"Failed to load author\";\n        });\n      } else {\n        console.error('Author ID is undefined');\n        this.showMsg = 'Author ID is undefined'; // Provide feedback to the user\n      }\n    },\n    updateAuthor() {\n      if (this.authorId && this.author) {\n        const API_URL = 'https://bookbuddy.pythonanywhere.com';\n        let jwtToken = localStorage.getItem('access');\n        const headers = {\n          Authorization: `JWT ${jwtToken}`\n        };\n        axios.put(`${API_URL}/api/authors/${this.authorId}`, this.author, {\n          headers: headers\n        }).then(response => {\n          console.log('Update successful:', response.data);\n          this.$router.push('/author-list'); // Redirect to the author list page\n        }).catch(error => {\n          console.error('Update failed:', error);\n          // Optionally, set an error message to display to the user\n          this.showMsg = 'Update failed. Please try again.';\n        });\n      } else {\n        console.error('Author ID or author data is undefined');\n        // Optionally, set an error message to display to the user\n        this.showMsg = 'Author ID or data is undefined.';\n      }\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.formData = new FormData();\n      this.formData.append('photo', file);\n    }\n  },\n  mounted() {\n    console.log(\"Route parameter pk:\", this.$route.params.pk);\n    if (this.$route.params.pk) {\n      this.authorId = this.$route.params.pk;\n      this.pageTitle = \"Edit Author\";\n      this.isUpdate = true;\n      apiService.getAuthor(this.$route.params.pk).then(response => {\n        this.author = response.data;\n        console.log(\"Author data loaded:\", this.author);\n      }).catch(error => {\n        console.error(\"Error fetching author data:\", error);\n        this.showMsg = \"Failed to load author\";\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","router","APIService","apiService","name","authorId","components","beforeCreate","localStorage","getItem","JSON","parse","authenticated","push","data","showError","author","pageTitle","isUpdate","showMsg","methods","createAuthor","addNewAuthor","then","response","status","cancelOperation","fetchAuthor","getAuthor","console","log","catch","error","updateAuthor","API_URL","jwtToken","headers","Authorization","put","$router","handleImageUpload","event","file","target","files","formData","FormData","append","mounted","$route","params","pk"],"sources":["/Users/tbonebrake/Documents/GitHub/Front-end-BookBuddy-Group1-ISQA4900/src/components/AuthorCreate.vue"],"sourcesContent":["import { APIService } from '../http/APIService';\n\nconst apiService = new APIService();\n\n<template>\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\" col align-items-center\">\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6\">\n              <div class=\"alert alert-danger shadow\" role=\"alert\"\n              v-if=\"showMsg === 'error'\">\n                Please verify Author Information\n              </div>\n            </div>\n          </div>\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6 align-items-center\">\n              <div class=\"card\">\n                <div class=\"card-header\">{{pageTitle}}</div>\n                <div class=\"card-body\">\n                  <form ref=\"form\">\n                    <div class=\"container-fluid\">\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Name</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"author.name\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Photo</label>\n                        <div class=\"col col-8\">\n                          <input type=\"file\" class=\"form-control-sm form-control\" @change=\"handleImageUpload\">\n                        </div>\n                      </div>          \n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Birthday</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"author.birth_date\" type=\"date\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Death</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"author.death_date\" type=\"date\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <!-- <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Author ID</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"author.auth_id\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div> -->\n\n                      <div class=\"row justify-content-around\">\n                        <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"createAuthor\">Save</div>\n                        <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"updateAuthor\">Update</div>\n                        <div type=\"button\" class=\"btn btn-secondary col-4\" @click=\"cancelOperation\">Cancel</div>   \n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n    import axios from 'axios';\n    import router from '../router';\n    import {APIService} from '../http/APIService';\n    const apiService = new APIService();\n  \n    export default {\n      name: 'AuthorCreate',\n      authorId: null,\n      components: {},\n          //prevent user from accessing this page if not authorized\n    beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") &&\n        JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true ){\n          this.authenticated = true\n        }\n        else {\n          this.authenticated = false\n        }\n        if(this.authenticated===false){\n            router.push(\"/auth\");\n          }\n   },\n      data() {\n        return {\n          showError: false,\n          author: {},\n          pageTitle: \"Add New Author\",\n          isUpdate: false,\n          showMsg: '',\n          authenticated: false\n        };\n      },\n      methods: {\n        createAuthor() {\n          apiService.addNewAuthor(this.author).then(response => {\n            if (response.status === 201) {\n              this.author = response.data;\n               this.showMsg = \"\";\n              router.push('/author-list/new');\n            }else{\n                this.showMsg = \"error\";\n            }\n          })/* .catch(error => {\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) { //\"bad request\"\n              this.showMsg = \"requestError\";\n            }else{\n              this.showMsg = \"error\";\n            }\n          }); */\n        },\n        cancelOperation(){\n           router.push(\"/author-list\");\n        },\n        fetchAuthor() {\n            if (this.authorId) {\n              apiService.getAuthor(this.authorId)\n                .then(response => {\n                  this.author = response.data; // Make sure data is assigned correctly\n                  console.log(\"Author data loaded:\", this.author);\n                })\n                .catch(error => {\n                  console.error('Error fetching author data:', error);\n                  this.showMsg = \"Failed to load author\";\n                });\n            } else {\n              console.error('Author ID is undefined');\n              this.showMsg = 'Author ID is undefined'; // Provide feedback to the user\n            }\n          },\n          updateAuthor() {\n            if (this.authorId && this.author) {\n              const API_URL = 'https://bookbuddy.pythonanywhere.com';\n              let jwtToken = localStorage.getItem('access');\n              const headers = { Authorization: `JWT ${jwtToken}` };\n\n              axios.put(`${API_URL}/api/authors/${this.authorId}`, this.author, { headers: headers })\n                .then(response => {\n                  console.log('Update successful:', response.data);\n                  this.$router.push('/author-list'); // Redirect to the author list page\n                })\n                .catch(error => {\n                  console.error('Update failed:', error);\n                  // Optionally, set an error message to display to the user\n                  this.showMsg = 'Update failed. Please try again.';\n                });\n            } else {\n              console.error('Author ID or author data is undefined');\n              // Optionally, set an error message to display to the user\n              this.showMsg = 'Author ID or data is undefined.';\n            }\n          },\n        handleImageUpload(event) {\n          const file = event.target.files[0];\n          this.formData = new FormData();\n          this.formData.append('photo', file);\n        },\n      },\n      mounted() {\n        console.log(\"Route parameter pk:\", this.$route.params.pk);\n        if (this.$route.params.pk) {\n          this.authorId = this.$route.params.pk;\n          this.pageTitle = \"Edit Author\";\n          this.isUpdate = true;\n          apiService.getAuthor(this.$route.params.pk).then(response => {\n            this.author = response.data;\n            console.log(\"Author data loaded:\", this.author);\n          }).catch(error => {\n            console.error(\"Error fetching author data:\", error);\n            this.showMsg = \"Failed to load author\";\n          });\n        }\n      },\n    }\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}