{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'BookBusddyCreate',\n  components: {},\n  //prevent user from accessing this page if not authorized\n  beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === false) {\n      router.push(\"/auth\");\n    }\n  },\n  data() {\n    return {\n      showError: false,\n      reader: {},\n      pageTitle: \"Add New Reader\",\n      isUpdate: false,\n      showMsg: '',\n      authenticated: false\n    };\n  },\n  methods: {\n    createReader() {\n      apiService.addNewReader(this.reader).then(response => {\n        if (response.status === 201) {\n          this.reader = response.data;\n          this.showMsg = \"\";\n          router.push('/reader-list/new');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          //\"bad request\"\n          this.showMsg = \"requestError\";\n        } else {\n          this.showMsg = \"error\";\n        }\n      });\n    },\n    cancelOperation() {\n      router.push(\"/reader-list\");\n    },\n    updateReader() {\n      apiService.updateReader(this.reader).then(response => {\n        if (response.status === 200) {\n          this.reader = response.data;\n          router.push('/reader-list/update');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n  },\n  mounted() {\n    if (this.$route.params.pk) {\n      this.pageTitle = \"Edit Reader\";\n      this.isUpdate = true;\n      apiService.getReader(this.$route.params.pk).then(response => {\n        this.reader = response.data;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else {\n          this.showMsg = \"error\";\n          router.push(\"/auth\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","components","beforeCreate","localStorage","getItem","JSON","parse","authenticated","push","data","showError","reader","pageTitle","isUpdate","showMsg","methods","createReader","addNewReader","then","response","status","catch","error","cancelOperation","updateReader","mounted","$route","params","pk","getReader"],"sources":["/Users/tbonebrake/Documents/GitHub/Front-end-BookBuddy-Group1-ISQA4900/src/components/BookBuddyCreate.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\" col align-items-center\">\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6\">\n              <div class=\"alert alert-danger shadow\" role=\"alert\"\n              v-if=\"showMsg === 'error'\">\n                Please verify BookBuddy selections!\n              </div>\n            </div>\n          </div>\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6 align-items-center\">\n              <div class=\"card\">\n                <div class=\"card-header\">{{pageTitle}}</div>\n                <div class=\"card-body\">\n                  <form ref=\"form\">\n                    <div class=\"container-fluid\">\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Book</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.book.title\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Favorite Status</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.fav_status\" type=\"boolean\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>          \n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Read Status</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.read_status\" type=\"boolean\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Read Later Status</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.read_later_status\" type=\"boolean\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Currently Reading</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.currently_reading\" type=\"boolean\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Current Page</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.current_page\" type=\"number\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                    <!-- Potentially comment out / remove dates; depends on wether we want to display last time reader updated their account information-->\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">Last Read</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.last_read\" type=\"boolean\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>  \n\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-4\">User</label>\n                        <div class=\"col col-8\">\n                          <input v-model=\"bookbuddy.user.username\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div> \n\n                      <div class=\"row justify-content-around\">\n                        <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"createReader\">Save</div>\n                        <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"updateReader\">Update</div>\n                        <div type=\"button\" class=\"btn btn-secondary col-4\" @click=\"cancelOperation\">Cancel</div>   \n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n    import router from '../router';\n    import {APIService} from '../http/APIService';\n    const apiService = new APIService();\n  \n    export default {\n      name: 'BookBusddyCreate',\n      components: {},\n          //prevent user from accessing this page if not authorized\n    beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") &&\n        JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true ){\n          this.authenticated = true\n        }\n        else {\n          this.authenticated = false\n        }\n        if(this.authenticated===false){\n            router.push(\"/auth\");\n          }\n   },\n      data() {\n        return {\n          showError: false,\n          reader: {},\n          pageTitle: \"Add New Reader\",\n          isUpdate: false,\n          showMsg: '',\n          authenticated: false\n        };\n      },\n      methods: {\n        createReader() {\n          apiService.addNewReader(this.reader).then(response => {\n            if (response.status === 201) {\n              this.reader = response.data;\n               this.showMsg = \"\";\n              router.push('/reader-list/new');\n            }else{\n                this.showMsg = \"error\";\n            }\n          }).catch(error => {\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) { //\"bad request\"\n              this.showMsg = \"requestError\";\n            }else{\n              this.showMsg = \"error\";\n            }\n          });\n        },\n        cancelOperation(){\n           router.push(\"/reader-list\");\n        },\n        updateReader() {\n          apiService.updateReader(this.reader).then(response => {\n            if (response.status === 200) {\n              this.reader = response.data;\n              router.push('/reader-list/update');\n            }else{\n                this.showMsg = \"error\";\n            }\n          }).catch(error => {\n            if (error.response.status === 401) {\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) {\n              this.showMsg = \"error\";\n            }\n          });\n        }\n      },\n      mounted() {\n        if (this.$route.params.pk) {\n          this.pageTitle = \"Edit Reader\";\n          this.isUpdate = true;\n          apiService.getReader(this.$route.params.pk).then(response => {\n            this.reader = response.data;\n          }).catch(error => {\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }else{\n              this.showMsg = \"error\";\n              router.push(\"/auth\");\n            }\n          });\n        }\n      },\n    }\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}